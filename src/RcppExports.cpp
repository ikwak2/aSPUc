// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calcT0
Rcpp::List calcT0(arma::mat tXUs, arma::mat yresid, arma::mat powV, int nperm);
RcppExport SEXP aSPUc_calcT0(SEXP tXUsSEXP, SEXP yresidSEXP, SEXP powVSEXP, SEXP npermSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tXUs(tXUsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yresid(yresidSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type powV(powVSEXP);
    Rcpp::traits::input_parameter< int >::type nperm(npermSEXP);
    rcpp_result_gen = Rcpp::wrap(calcT0(tXUs, yresid, powV, nperm));
    return rcpp_result_gen;
END_RCPP
}
// calcT0sim
Rcpp::List calcT0sim(arma::mat CvSqrt, arma::mat powV, int nperm);
RcppExport SEXP aSPUc_calcT0sim(SEXP CvSqrtSEXP, SEXP powVSEXP, SEXP npermSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type CvSqrt(CvSqrtSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type powV(powVSEXP);
    Rcpp::traits::input_parameter< int >::type nperm(npermSEXP);
    rcpp_result_gen = Rcpp::wrap(calcT0sim(CvSqrt, powV, nperm));
    return rcpp_result_gen;
END_RCPP
}
// calcT0simM2
Rcpp::List calcT0simM2(arma::mat A, arma::mat B, arma::mat powV, arma::mat pow2V, int nperm, int Pval, arma::mat Ts);
RcppExport SEXP aSPUc_calcT0simM2(SEXP ASEXP, SEXP BSEXP, SEXP powVSEXP, SEXP pow2VSEXP, SEXP npermSEXP, SEXP PvalSEXP, SEXP TsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type powV(powVSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pow2V(pow2VSEXP);
    Rcpp::traits::input_parameter< int >::type nperm(npermSEXP);
    Rcpp::traits::input_parameter< int >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ts(TsSEXP);
    rcpp_result_gen = Rcpp::wrap(calcT0simM2(A, B, powV, pow2V, nperm, Pval, Ts));
    return rcpp_result_gen;
END_RCPP
}
// set_seed
void set_seed(unsigned int seed);
RcppExport SEXP aSPUc_set_seed(SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    set_seed(seed);
    return R_NilValue;
END_RCPP
}
// avg_rank
Rcpp::NumericVector avg_rank(Rcpp::NumericVector x);
RcppExport SEXP aSPUc_avg_rank(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(avg_rank(x));
    return rcpp_result_gen;
END_RCPP
}
// aSPUpathEngine
Rcpp::List aSPUpathEngine(arma::mat tXUs, Rcpp::NumericVector r, arma::vec pow1, arma::vec pow2, int nGenes, int n_perm, int k, arma::vec nSNPs0, arma::vec Ts2, int s);
RcppExport SEXP aSPUc_aSPUpathEngine(SEXP tXUsSEXP, SEXP rSEXP, SEXP pow1SEXP, SEXP pow2SEXP, SEXP nGenesSEXP, SEXP n_permSEXP, SEXP kSEXP, SEXP nSNPs0SEXP, SEXP Ts2SEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tXUs(tXUsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow1(pow1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow2(pow2SEXP);
    Rcpp::traits::input_parameter< int >::type nGenes(nGenesSEXP);
    Rcpp::traits::input_parameter< int >::type n_perm(n_permSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nSNPs0(nSNPs0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts2(Ts2SEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(aSPUpathEngine(tXUs, r, pow1, pow2, nGenes, n_perm, k, nSNPs0, Ts2, s));
    return rcpp_result_gen;
END_RCPP
}
// aSPUpermEngine
Rcpp::List aSPUpermEngine(arma::mat tXUs, Rcpp::NumericVector r, arma::vec pow1, int n_perm, arma::vec Ts, int s);
RcppExport SEXP aSPUc_aSPUpermEngine(SEXP tXUsSEXP, SEXP rSEXP, SEXP pow1SEXP, SEXP n_permSEXP, SEXP TsSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tXUs(tXUsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow1(pow1SEXP);
    Rcpp::traits::input_parameter< int >::type n_perm(n_permSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(aSPUpermEngine(tXUs, r, pow1, n_perm, Ts, s));
    return rcpp_result_gen;
END_RCPP
}
// aSPUsPathEngine
Rcpp::List aSPUsPathEngine(Rcpp::List CH, Rcpp::List CHcovSq, arma::vec pow1, arma::vec pow2, int nGenes, int n_perm, int k, int Ps, arma::vec nSNPs0, arma::vec StdTs);
RcppExport SEXP aSPUc_aSPUsPathEngine(SEXP CHSEXP, SEXP CHcovSqSEXP, SEXP pow1SEXP, SEXP pow2SEXP, SEXP nGenesSEXP, SEXP n_permSEXP, SEXP kSEXP, SEXP PsSEXP, SEXP nSNPs0SEXP, SEXP StdTsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type CH(CHSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type CHcovSq(CHcovSqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow1(pow1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow2(pow2SEXP);
    Rcpp::traits::input_parameter< int >::type nGenes(nGenesSEXP);
    Rcpp::traits::input_parameter< int >::type n_perm(n_permSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type Ps(PsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nSNPs0(nSNPs0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type StdTs(StdTsSEXP);
    rcpp_result_gen = Rcpp::wrap(aSPUsPathEngine(CH, CHcovSq, pow1, pow2, nGenes, n_perm, k, Ps, nSNPs0, StdTs));
    return rcpp_result_gen;
END_RCPP
}
// aSPUsPathEngine2
Rcpp::List aSPUsPathEngine2(Rcpp::List CH, Rcpp::List CHcovSq, arma::vec pow1, arma::vec pow2, int nGenes, int n_perm, int k, int Ps, arma::vec nSNPs0, arma::vec Ts2, int s);
RcppExport SEXP aSPUc_aSPUsPathEngine2(SEXP CHSEXP, SEXP CHcovSqSEXP, SEXP pow1SEXP, SEXP pow2SEXP, SEXP nGenesSEXP, SEXP n_permSEXP, SEXP kSEXP, SEXP PsSEXP, SEXP nSNPs0SEXP, SEXP Ts2SEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type CH(CHSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type CHcovSq(CHcovSqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow1(pow1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pow2(pow2SEXP);
    Rcpp::traits::input_parameter< int >::type nGenes(nGenesSEXP);
    Rcpp::traits::input_parameter< int >::type n_perm(n_permSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type Ps(PsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nSNPs0(nSNPs0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts2(Ts2SEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(aSPUsPathEngine2(CH, CHcovSq, pow1, pow2, nGenes, n_perm, k, Ps, nSNPs0, Ts2, s));
    return rcpp_result_gen;
END_RCPP
}
